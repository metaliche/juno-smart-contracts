schema {
	query: Query
}

type Query {
	messages(id: String, height: Int): [Message]
    msgInstantiateContract(id: String, height: Int): [MsgInstantiateContract]
    msgExecuteContract(id: String, height: Int): [MsgExecuteContract]
    msgMigrateContract(id: String, height: Int): [MsgMigrateContract]
    msgUpdateAdmin(id: String, height: Int): [MsgUpdateAdmin]
    msgClearAdmin(id: String, height: Int): [MsgClearAdmin]
}

type Message {
  id: ID!
  index: Int
  height: Int
  hash: String
  txHash: String
  sender: String
  contract: String
  msg: String
}

type MsgInstantiateContract {
  id: ID!
  index: Int
  height: Int
  hash: String
  txHash: String
  contract: String
  sender: String
  admin: String
  codeID: String
  label: String
  msg: String
}

type MsgExecuteContract {
  id: ID!
  index: Int
  height: Int
  hash: String
  txHash: String
  contract: String
  sender: String
  codeID: String
  label: String
  msg: String
}

type MsgMigrateContract {
  id: ID!
  sender: String
  contract: String
  codeId: Int
  msg: String
}

type MsgUpdateAdmin {
  id: ID!
  sender: String
  newAdmin: String
  contract: String
}

type MsgClearAdmin {
  id: ID!
  sender: String
  contract: String
}

